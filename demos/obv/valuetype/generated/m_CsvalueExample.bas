Attribute VB_Name = "m_CsvalueExample"
'Generated by IDL2VB v121. Copyright (c) 2000-2003 Martin.Both
'Source File Name: ../demos/obv/valuetype/valuetype.idl

Option Explicit

'valuetype ::obv::custom::valueExample
Public Const TypeId As String = "IDL:obv/custom/valueExample:1.0"

'Helper
Public Function TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Get previously created recursive or concrete TypeCode
    Dim oRecTC As cOrbTypeCode
    Set oRecTC = oOrb.getRecursiveTC(TypeId, 29) 'mCB.tk_value
    If oRecTC Is Nothing Then
        'Create place holder for TypeCode to avoid endless recursion
        Set oRecTC = oOrb.createRecursiveTc(TypeId)
        On Error GoTo ErrRollback
        'Describe value members
        Dim oMemSeq As cCBValueMemberSeq
        Set oMemSeq = New cCBValueMemberSeq
        oMemSeq.Length = 2
        Set oMemSeq.Item(0) = New cCBValueMember
        oMemSeq.Item(0).name = "number_state"
        Set oMemSeq.Item(0).p_type = oOrb.createPrimitiveTc(3) 'VBOrb.TCLong
        oMemSeq.Item(0).access = 0 'PRIVATE_MEMBER
        Set oMemSeq.Item(1) = New cCBValueMember
        oMemSeq.Item(1).name = "name_state"
        Set oMemSeq.Item(1).p_type = oOrb.createStringTc(0)
        oMemSeq.Item(1).access = 1 'PUBLIC_MEMBER
        'Overwrite place holder
        Dim iTypeModifier As Integer
        iTypeModifier = 1 'VM_CUSTOM
        Dim oConcreteBase As cOrbTypeCode
        Set oConcreteBase = Nothing
        Call oRecTC.setRecTc2ValueTc("valueExample", iTypeModifier, oConcreteBase, oMemSeq)
    End If
    Set TypeCode = oRecTC
    Exit Function
ErrRollback:
    Call oRecTC.destroy
ErrHandler:
    Call VBOrb.ErrReraise(Err, "TypeCode")
End Function

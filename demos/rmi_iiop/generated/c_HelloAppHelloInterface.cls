VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "c_HelloAppHelloInterface"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Generated by IDL2VB v121. Copyright (c) 1999-2003 Martin.Both
'Source File Name: jdk1.4/idl/HelloApp/HelloInterface.idl
'Target File Name: c_HelloAppHelloInterface.cls

Option Explicit

Implements cOrbAbstractBase
Implements cOrbObject

'interface ::HelloApp::HelloInterface
Const sTypeId As String = "RMI:HelloApp.HelloInterface:0000000000000000"
Private oObjRef As cOrbObjRef

'Helper to get different COM interface
Friend Function thisOrbAbstractBase() As cOrbAbstractBase
    Set thisOrbAbstractBase = Me
End Function

'Helper
Private Function cOrbAbstractBase_isObjRef() As Boolean
    cOrbAbstractBase_isObjRef = True
End Function

'Helper to get different COM interface
Friend Function thisOrbObject() As cOrbObject
    Set thisOrbObject = Me
End Function

'Helper
Private Function cOrbObject_setObjRef(ByVal ObjRef As cOrbObjRef, _
    ByVal Check As Boolean) As Boolean
    On Error GoTo ErrHandler
    If ObjRef Is Nothing Then
        cOrbObject_setObjRef = True
    Else
        cOrbObject_setObjRef = False
        Call ObjRef.narrow(sTypeId, Check, False)
    End If
    Set oObjRef = ObjRef
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "setObjRef")
End Function

'Helper
Private Function cOrbObject_getObjRef() As cOrbObjRef
    Set cOrbObject_getObjRef = oObjRef
End Function

'Helper
Private Function cOrbObject_getId() As String
    cOrbObject_getId = sTypeId
End Function

'attribute integerObj
Public Property Get integerObj() As c_javalangInteger
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_get_integerObj", False)
    Dim oIn As cOrbStream
    Call oRequest.invokeReqst(False)
    Set oIn = oRequest.OutRes
    Set integerObj = oIn.readValue(New c_javalangInteger)
    Exit Property
ErrHandler:
    Set integerObj = Nothing
    Call VBOrb.ErrReraise(Err, "integerObj.Get")
End Property

Public Property Set integerObj(ByVal integerObjNew As c_javalangInteger)
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_set_integerObj", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeValue(integerObjNew)
    Call oRequest.invokeReqst(False)
    Exit Property
ErrHandler:
    Call VBOrb.ErrReraise(Err, "integerObj.Set")
End Property

'attribute char
Public Property Get char() As Integer
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_get_char", False)
    Dim oIn As cOrbStream
    Call oRequest.invokeReqst(False)
    Set oIn = oRequest.OutRes
    char = oIn.readWchar()
    Exit Property
ErrHandler:
    Call VBOrb.ErrReraise(Err, "char.Get")
End Property

Public Property Let char(ByVal charNew As Integer)
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_set_char", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeWchar(charNew)
    Call oRequest.invokeReqst(False)
    Exit Property
ErrHandler:
    Call VBOrb.ErrReraise(Err, "char.Let")
End Property

'attribute bytes
Public Property Get bytes() As c_ByteSeq
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_get_bytes", False)
    Dim oIn As cOrbStream
    Call oRequest.invokeReqst(False)
    Set oIn = oRequest.OutRes
    Set bytes = oIn.readValue(New c_ByteSeq)
    Exit Property
ErrHandler:
    Set bytes = Nothing
    Call VBOrb.ErrReraise(Err, "bytes.Get")
End Property

Public Property Set bytes(ByVal bytesNew As c_ByteSeq)
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_set_bytes", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeValue(bytesNew)
    Call oRequest.invokeReqst(False)
    Exit Property
ErrHandler:
    Call VBOrb.ErrReraise(Err, "bytes.Set")
End Property

'attribute string
Public Property Get stringProp() As cCBWStringValue
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_get_string", False)
    Dim oIn As cOrbStream
    Call oRequest.invokeReqst(False)
    Set oIn = oRequest.OutRes
    Set stringProp = oIn.readValue(New cCBWStringValue)
    Exit Property
ErrHandler:
    Set stringProp = Nothing
    Call VBOrb.ErrReraise(Err, "stringProp.Get")
End Property

Public Property Set stringProp(ByVal stringNew As cCBWStringValue)
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("_set_string", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeValue(stringNew)
    Call oRequest.invokeReqst(False)
    Exit Property
ErrHandler:
    Call VBOrb.ErrReraise(Err, "stringProp.Set")
End Property

'sayHello()
Public Sub sayHello()
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("sayHello", False)
    Call oRequest.invokeReqst(False)
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "sayHello")
End Sub

'getHashMap()
Public Function getHashMap(ByVal arg0 As Long) As c_javautilHashMap
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("getHashMap", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeLong(arg0)
    Dim oIn As cOrbStream
    Call oRequest.invokeReqst(False)
    Set oIn = oRequest.OutRes
    Set getHashMap = oIn.readValue(New c_javautilHashMap)
    Exit Function
ErrHandler:
    Set getHashMap = Nothing
    Call VBOrb.ErrReraise(Err, "getHashMap")
End Function

'setHashMap()
Public Sub setHashMap(ByVal arg0 As c_javautilHashMap)
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("setHashMap", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call oOut.writeValue(arg0)
    Call oRequest.invokeReqst(False)
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "setHashMap")
End Sub

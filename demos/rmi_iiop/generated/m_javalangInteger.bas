Attribute VB_Name = "m_javalangInteger"
'Generated by IDL2VB v121. Copyright (c) 2000-2003 Martin.Both
'Source File Name: jdk1.4/idl/HelloApp/HelloInterface.idl

Option Explicit

'valuetype ::java::lang::Integer
Public Const TypeId As String = "RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738"

'Constants
Public Const MIN_VALUE As Long = -2147483648
Public Const MAX_VALUE As Long = 2147483647

'Helper
Public Function TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Get previously created recursive or concrete TypeCode
    Dim oRecTC As cOrbTypeCode
    Set oRecTC = oOrb.getRecursiveTC(TypeId, 29) 'mCB.tk_value
    If oRecTC Is Nothing Then
        'Create place holder for TypeCode to avoid endless recursion
        Set oRecTC = oOrb.createRecursiveTc(TypeId)
        On Error GoTo ErrRollback
        'Describe value members
        Dim oMemSeq As cCBValueMemberSeq
        Set oMemSeq = New cCBValueMemberSeq
        oMemSeq.Length = 1
        Set oMemSeq.Item(0) = New cCBValueMember
        oMemSeq.Item(0).name = "value"
        Set oMemSeq.Item(0).p_type = oOrb.createPrimitiveTc(3) 'VBOrb.TCLong
        oMemSeq.Item(0).access = 0 'PRIVATE_MEMBER
        'Overwrite place holder
        Dim iTypeModifier As Integer
        iTypeModifier = 0 'VM_NONE
        Dim oConcreteBase As cOrbTypeCode
        Set oConcreteBase = m_javalangNumber.TypeCode()
        Call oRecTC.setRecTc2ValueTc("Integer", iTypeModifier, oConcreteBase, oMemSeq)
    End If
    Set TypeCode = oRecTC
    Exit Function
ErrRollback:
    Call oRecTC.destroy
ErrHandler:
    Call VBOrb.ErrReraise(Err, "TypeCode")
End Function

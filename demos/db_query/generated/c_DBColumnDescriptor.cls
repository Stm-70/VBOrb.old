VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "c_DBColumnDescriptor"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Generated by IDL2VB v121. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../demos/db_query/database.idl
'Target File Name: c_DBColumnDescriptor.cls

Option Explicit

'struct ::DB::ColumnDescriptor
Const sTypeId As String = "IDL:DB/ColumnDescriptor:1.0"

'Member(s)
Private name_ As String
Private p_type_ As Long
Private sqltype_ As Integer
Private length_ As Integer
Private p_scale_ As Integer
Private precision_ As Integer
Private nullable_ As Boolean

'Member: name
Public Property Get name() As String
    name = name_
End Property

Public Property Let name(ByVal nameNew As String)
    name_ = nameNew
End Property

'Member: type
Public Property Get p_type() As Long
    p_type = p_type_
End Property

Public Property Let p_type(ByVal typeNew As Long)
    p_type_ = typeNew
End Property

'Member: sqltype
Public Property Get sqltype() As Integer
    sqltype = sqltype_
End Property

Public Property Let sqltype(ByVal sqltypeNew As Integer)
    sqltype_ = sqltypeNew
End Property

'Member: length
Public Property Get length() As Integer
    length = length_
End Property

Public Property Let length(ByVal lengthNew As Integer)
    length_ = lengthNew
End Property

'Member: scale
Public Property Get p_scale() As Integer
    p_scale = p_scale_
End Property

Public Property Let p_scale(ByVal scaleNew As Integer)
    p_scale_ = scaleNew
End Property

'Member: precision
Public Property Get precision() As Integer
    precision = precision_
End Property

Public Property Let precision(ByVal precisionNew As Integer)
    precision_ = precisionNew
End Property

'Member: nullable
Public Property Get nullable() As Boolean
    nullable = nullable_
End Property

Public Property Let nullable(ByVal nullableNew As Boolean)
    nullable_ = nullableNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    name_ = oIn.readString()
    p_type_ = oIn.readUlong()
    sqltype_ = oIn.readShort()
    length_ = oIn.readShort()
    p_scale_ = oIn.readShort()
    precision_ = oIn.readShort()
    nullable_ = oIn.readBoolean()
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "ColumnDescriptor.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeString(name_)
    Call oOut.writeUlong(p_type_)
    Call oOut.writeShort(sqltype_)
    Call oOut.writeShort(length_)
    Call oOut.writeShort(p_scale_)
    Call oOut.writeShort(precision_)
    Call oOut.writeBoolean(nullable_)
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "ColumnDescriptor.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    name_ = oAny.getString()
    Call oAny.nextPos
    p_type_ = oAny.getUlong()
    Call oAny.nextPos
    sqltype_ = oAny.getShort()
    Call oAny.nextPos
    length_ = oAny.getShort()
    Call oAny.nextPos
    p_scale_ = oAny.getShort()
    Call oAny.nextPos
    precision_ = oAny.getShort()
    Call oAny.nextPos
    nullable_ = oAny.getBoolean()
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call oAny.insertString(name_)
    Call oAny.nextPos
    Call oAny.insertUlong(p_type_)
    Call oAny.nextPos
    Call oAny.insertShort(sqltype_)
    Call oAny.nextPos
    Call oAny.insertShort(length_)
    Call oAny.nextPos
    Call oAny.insertShort(p_scale_)
    Call oAny.nextPos
    Call oAny.insertShort(precision_)
    Call oAny.nextPos
    Call oAny.insertBoolean(nullable_)
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub

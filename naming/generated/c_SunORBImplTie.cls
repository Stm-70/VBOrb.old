VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "c_SunORBImplTie"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Generated by IDL2VB v121. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../naming/tnameserv.idl
'Target File Name: c_SunORBImplTie.cls

Option Explicit

'You can use this class as a tie to your servant or as a servant example.
'Using as a tie:
' Your servant has to implement c_SunORB
' To activate a servant via tie write following:
'  Dim oSunORBImplTie As c_SunORBImplTie
'  Set oSunORBImplTie = New c_SunORBImplTie
'  Call oSunORBImplTie.setDelegate(oServant)
'  Call oOrb.Connect(oSunORBImplTie)
'Using as a servant example:
' Rename class to c_SunORBImpl and save the file as c_SunORBImpl.cls.
' Remove delegate stuff and write your own servant operations.
' To activate a servant write following:
'  Dim oSunORBImpl As c_SunORBImpl
'  Set oSunORBImpl = New c_SunORBImpl
'  Call oOrb.Connect(oSunORBImpl)

Implements cOrbSkeleton
Implements c_SunORB

'interface ::CORBA::ORB
Const sTypeId As String = "IDL:omg.org/CORBA/ORB:1.0"
Private oObjRef As cOrbObjRef
Private oDelegate As c_SunORB

'Each tie contains a delegate object, to which all operations are forwarded.
'You can remove this if you use this class as an example for your servant.
Public Sub setDelegate(ByVal Delegate As c_SunORB)
    Set oDelegate = Delegate
End Sub

Public Function getDelegate() As c_SunORB
    Set getDelegate = oDelegate
End Function

Friend Property Get ObjRef() As cOrbObjRef
    Set ObjRef = oObjRef
End Property

Friend Property Get This() As c_SunORB
    Dim oObj As cOrbObject
    Set oObj = New c_SunORB
    If oObj.setObjRef(oObjRef, False) Then
        Set This = Nothing
    Else
        Set This = oObj
    End If
End Property

Private Property Get cOrbSkeleton_TypeId(ByVal Item As Integer) As String
    Select Case Item
    Case 0: cOrbSkeleton_TypeId = sTypeId
    Case 1: cOrbSkeleton_TypeId = "IDL:omg.org/CORBA/Object:1.0"
    End Select
End Property

Private Property Get cOrbSkeleton_ObjRef() As cOrbObjRef
    Set cOrbSkeleton_ObjRef = oObjRef
End Property

Private Property Set cOrbSkeleton_ObjRef(ByVal newObjRef As cOrbObjRef)
    Set oObjRef = newObjRef
End Property

'Helper
Private Function cOrbSkeleton_execute(ByVal sOperation As String, _
    ByVal oIn As cOrbStream, ByVal oOut As cOrbStream) As Long
    On Error GoTo ErrHandler
    Dim oImpl_ As c_SunORB
    Set oImpl_ = IIf(oDelegate Is Nothing, Me, oDelegate)
    Select Case sOperation
    Case Else
        Call VBOrb.raiseBADOPERATION(1, VBOrb.CompletedNO, sOperation)
    End Select
    cOrbSkeleton_execute = 0 'NO_EXCEPTION
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "ORB.execute(" & sOperation & ")")
End Function

'Implements c_SunORB

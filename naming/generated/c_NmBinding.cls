VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "c_NmBinding"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Generated by IDL2VB v121. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../naming/CosNaming.idl
'Target File Name: c_NmBinding.cls

Option Explicit

'struct ::CosNaming::Binding
Const sTypeId As String = "IDL:omg.org/CosNaming/Binding:1.0"

'Member(s)
Private binding_name_ As c_NmNameComponentSeq
Private binding_type_ As Long

'Member: binding_name
Public Property Get binding_name() As c_NmNameComponentSeq
    Set binding_name = binding_name_
End Property

Public Property Set binding_name(ByVal binding_nameNew As c_NmNameComponentSeq)
    Set binding_name_ = binding_nameNew
End Property

'Member: binding_type
Public Property Get binding_type() As Long
    binding_type = binding_type_
End Property

Public Property Let binding_type(ByVal binding_typeNew As Long)
    binding_type_ = binding_typeNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    Set binding_name_ = New c_NmNameComponentSeq
    Call binding_name_.initByRead(oIn, 0)
    binding_type_ = oIn.readUlong()
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "Binding.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call binding_name_.writeMe(oOut, 0)
    Call oOut.writeUlong(binding_type_)
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "Binding.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Set binding_name_ = New c_NmNameComponentSeq
    Call binding_name_.initByAny(oAny.currentComponent())
    Call oAny.nextPos
    binding_type_ = oAny.getUlong()
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call binding_name_.insertIntoAny(oAny.currentComponent())
    Call oAny.nextPos
    Call oAny.insertUlong(binding_type_)
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub

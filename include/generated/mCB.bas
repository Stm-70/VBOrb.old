Attribute VB_Name = "mCB"
'Generated by IDL2VB v121. Copyright (c) 2000-2003 Martin.Both
'Source File Name: ../include/CORBA.idl

Option Explicit

'module ::CORBA

'Constants
Public Const VM_NONE As Integer = 0
Public Const VM_CUSTOM As Integer = 1
Public Const VM_ABSTRACT As Integer = 2
Public Const VM_TRUNCATABLE As Integer = 3
Public Const BAD_POLICY As Integer = 0
Public Const UNSUPPORTED_POLICY As Integer = 1
Public Const BAD_POLICY_TYPE As Integer = 2
Public Const BAD_POLICY_VALUE As Integer = 3
Public Const UNSUPPORTED_POLICY_VALUE As Integer = 4
Public Const PRIVATE_MEMBER As Integer = 0
Public Const PUBLIC_MEMBER As Integer = 1
Public Const Security As Integer = 1

'Enum TCKind
Public Const tk_null As Long = 0
Public Const tk_void As Long = 1
Public Const tk_short As Long = 2
Public Const tk_long As Long = 3
Public Const tk_ushort As Long = 4
Public Const tk_ulong As Long = 5
Public Const tk_float As Long = 6
Public Const tk_double As Long = 7
Public Const tk_boolean As Long = 8
Public Const tk_char As Long = 9
Public Const tk_octet As Long = 10
Public Const tk_any As Long = 11
Public Const tk_TypeCode As Long = 12
Public Const tk_Principal As Long = 13
Public Const tk_objref As Long = 14
Public Const tk_struct As Long = 15
Public Const tk_union As Long = 16
Public Const tk_enum As Long = 17
Public Const tk_string As Long = 18
Public Const tk_sequence As Long = 19
Public Const tk_array As Long = 20
Public Const tk_alias As Long = 21
Public Const tk_except As Long = 22
Public Const tk_longlong As Long = 23
Public Const tk_ulonglong As Long = 24
Public Const tk_longdouble As Long = 25
Public Const tk_wchar As Long = 26
Public Const tk_wstring As Long = 27
Public Const tk_fixed As Long = 28
Public Const tk_value As Long = 29
Public Const tk_value_box As Long = 30
Public Const tk_native As Long = 31
Public Const tk_abstract_interface As Long = 32
Public Const tk_local_interface As Long = 33
Public Const tk_component As Long = 34
Public Const tk_home As Long = 35
Public Const tk_event As Long = 36

'Enum DefinitionKind
Public Const dk_none As Long = 0
Public Const dk_all As Long = 1
Public Const dk_Attribute As Long = 2
Public Const dk_Constant As Long = 3
Public Const dk_Exception As Long = 4
Public Const dk_Interface As Long = 5
Public Const dk_Module As Long = 6
Public Const dk_Operation As Long = 7
Public Const dk_Typedef As Long = 8
Public Const dk_Alias As Long = 9
Public Const dk_Struct As Long = 10
Public Const dk_Union As Long = 11
Public Const dk_Enum As Long = 12
Public Const dk_Primitive As Long = 13
Public Const dk_String As Long = 14
Public Const dk_Sequence As Long = 15
Public Const dk_Array As Long = 16
Public Const dk_Repository As Long = 17
Public Const dk_Wstring As Long = 18
Public Const dk_Fixed As Long = 19
Public Const dk_Value As Long = 20
Public Const dk_ValueBox As Long = 21
Public Const dk_ValueMember As Long = 22
Public Const dk_Native As Long = 23
Public Const dk_AbstractInterface As Long = 24
Public Const dk_LocalInterface As Long = 25
Public Const dk_Component As Long = 26
Public Const dk_Home As Long = 27
Public Const dk_Factory As Long = 28
Public Const dk_Finder As Long = 29
Public Const dk_Emits As Long = 30
Public Const dk_Publishes As Long = 31
Public Const dk_Consumes As Long = 32
Public Const dk_Provides As Long = 33
Public Const dk_Uses As Long = 34
Public Const dk_Event As Long = 35

'Enum PrimitiveKind
Public Const pk_null As Long = 0
Public Const pk_void As Long = 1
Public Const pk_short As Long = 2
Public Const pk_long As Long = 3
Public Const pk_ushort As Long = 4
Public Const pk_ulong As Long = 5
Public Const pk_float As Long = 6
Public Const pk_double As Long = 7
Public Const pk_boolean As Long = 8
Public Const pk_char As Long = 9
Public Const pk_octet As Long = 10
Public Const pk_any As Long = 11
Public Const pk_TypeCode As Long = 12
Public Const pk_Principal As Long = 13
Public Const pk_string As Long = 14
Public Const pk_objref As Long = 15
Public Const pk_longlong As Long = 16
Public Const pk_ulonglong As Long = 17
Public Const pk_longdouble As Long = 18
Public Const pk_wchar As Long = 19
Public Const pk_wstring As Long = 20
Public Const pk_value_base As Long = 21

'Enum AttributeMode
Public Const ATTR_NORMAL As Long = 0
Public Const ATTR_READONLY As Long = 1

'Enum OperationMode
Public Const OP_NORMAL As Long = 0
Public Const OP_ONEWAY As Long = 1

'Enum ParameterMode
Public Const PARAM_IN As Long = 0
Public Const PARAM_OUT As Long = 1
Public Const PARAM_INOUT As Long = 2

'ValueBox StringValue, Helper
Public Function StringValue_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/StringValue:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Get previously created recursive or concrete TypeCode
    Dim oRecTC As cOrbTypeCode
    Set oRecTC = oOrb.getRecursiveTC(sTypeId, 30) 'mCB.tk_value_box
    If oRecTC Is Nothing Then
        'Create place holder for TypeCode to avoid endless recursion
        Set oRecTC = oOrb.createRecursiveTc(sTypeId)
        On Error GoTo ErrRollback
        'Describe ValueBox
        Dim oBoxedType As cOrbTypeCode
        Set oBoxedType = oOrb.createStringTc(0)
        'Overwrite place holder
        Call oRecTC.setRecTc2ValueBoxTc("StringValue", oBoxedType)
    End If
    Set StringValue_TypeCode = oRecTC
    Exit Function
ErrRollback:
    Call oRecTC.destroy
ErrHandler:
    Call VBOrb.ErrReraise(Err, "StringValue_TypeCode")
End Function

'ValueBox WStringValue, Helper
Public Function WStringValue_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/WStringValue:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Get previously created recursive or concrete TypeCode
    Dim oRecTC As cOrbTypeCode
    Set oRecTC = oOrb.getRecursiveTC(sTypeId, 30) 'mCB.tk_value_box
    If oRecTC Is Nothing Then
        'Create place holder for TypeCode to avoid endless recursion
        Set oRecTC = oOrb.createRecursiveTc(sTypeId)
        On Error GoTo ErrRollback
        'Describe ValueBox
        Dim oBoxedType As cOrbTypeCode
        Set oBoxedType = oOrb.createWstringTc(0)
        'Overwrite place holder
        Call oRecTC.setRecTc2ValueBoxTc("WStringValue", oBoxedType)
    End If
    Set WStringValue_TypeCode = oRecTC
    Exit Function
ErrRollback:
    Call oRecTC.destroy
ErrHandler:
    Call VBOrb.ErrReraise(Err, "WStringValue_TypeCode")
End Function

'Enum TCKind, Helper
Public Function TCKind_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/TCKind:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 37
    oMemSeq.Item(0) = "tk_null"
    oMemSeq.Item(1) = "tk_void"
    oMemSeq.Item(2) = "tk_short"
    oMemSeq.Item(3) = "tk_long"
    oMemSeq.Item(4) = "tk_ushort"
    oMemSeq.Item(5) = "tk_ulong"
    oMemSeq.Item(6) = "tk_float"
    oMemSeq.Item(7) = "tk_double"
    oMemSeq.Item(8) = "tk_boolean"
    oMemSeq.Item(9) = "tk_char"
    oMemSeq.Item(10) = "tk_octet"
    oMemSeq.Item(11) = "tk_any"
    oMemSeq.Item(12) = "tk_TypeCode"
    oMemSeq.Item(13) = "tk_Principal"
    oMemSeq.Item(14) = "tk_objref"
    oMemSeq.Item(15) = "tk_struct"
    oMemSeq.Item(16) = "tk_union"
    oMemSeq.Item(17) = "tk_enum"
    oMemSeq.Item(18) = "tk_string"
    oMemSeq.Item(19) = "tk_sequence"
    oMemSeq.Item(20) = "tk_array"
    oMemSeq.Item(21) = "tk_alias"
    oMemSeq.Item(22) = "tk_except"
    oMemSeq.Item(23) = "tk_longlong"
    oMemSeq.Item(24) = "tk_ulonglong"
    oMemSeq.Item(25) = "tk_longdouble"
    oMemSeq.Item(26) = "tk_wchar"
    oMemSeq.Item(27) = "tk_wstring"
    oMemSeq.Item(28) = "tk_fixed"
    oMemSeq.Item(29) = "tk_value"
    oMemSeq.Item(30) = "tk_value_box"
    oMemSeq.Item(31) = "tk_native"
    oMemSeq.Item(32) = "tk_abstract_interface"
    oMemSeq.Item(33) = "tk_local_interface"
    oMemSeq.Item(34) = "tk_component"
    oMemSeq.Item(35) = "tk_home"
    oMemSeq.Item(36) = "tk_event"
    Set TCKind_TypeCode = oOrb.createEnumTc(sTypeId, "TCKind", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "TCKind_TypeCode")
End Function

'Enum DefinitionKind, Helper
Public Function DefinitionKind_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/DefinitionKind:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 36
    oMemSeq.Item(0) = "dk_none"
    oMemSeq.Item(1) = "dk_all"
    oMemSeq.Item(2) = "dk_Attribute"
    oMemSeq.Item(3) = "dk_Constant"
    oMemSeq.Item(4) = "dk_Exception"
    oMemSeq.Item(5) = "dk_Interface"
    oMemSeq.Item(6) = "dk_Module"
    oMemSeq.Item(7) = "dk_Operation"
    oMemSeq.Item(8) = "dk_Typedef"
    oMemSeq.Item(9) = "dk_Alias"
    oMemSeq.Item(10) = "dk_Struct"
    oMemSeq.Item(11) = "dk_Union"
    oMemSeq.Item(12) = "dk_Enum"
    oMemSeq.Item(13) = "dk_Primitive"
    oMemSeq.Item(14) = "dk_String"
    oMemSeq.Item(15) = "dk_Sequence"
    oMemSeq.Item(16) = "dk_Array"
    oMemSeq.Item(17) = "dk_Repository"
    oMemSeq.Item(18) = "dk_Wstring"
    oMemSeq.Item(19) = "dk_Fixed"
    oMemSeq.Item(20) = "dk_Value"
    oMemSeq.Item(21) = "dk_ValueBox"
    oMemSeq.Item(22) = "dk_ValueMember"
    oMemSeq.Item(23) = "dk_Native"
    oMemSeq.Item(24) = "dk_AbstractInterface"
    oMemSeq.Item(25) = "dk_LocalInterface"
    oMemSeq.Item(26) = "dk_Component"
    oMemSeq.Item(27) = "dk_Home"
    oMemSeq.Item(28) = "dk_Factory"
    oMemSeq.Item(29) = "dk_Finder"
    oMemSeq.Item(30) = "dk_Emits"
    oMemSeq.Item(31) = "dk_Publishes"
    oMemSeq.Item(32) = "dk_Consumes"
    oMemSeq.Item(33) = "dk_Provides"
    oMemSeq.Item(34) = "dk_Uses"
    oMemSeq.Item(35) = "dk_Event"
    Set DefinitionKind_TypeCode = oOrb.createEnumTc(sTypeId, "DefinitionKind", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "DefinitionKind_TypeCode")
End Function

'Enum PrimitiveKind, Helper
Public Function PrimitiveKind_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/PrimitiveKind:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 22
    oMemSeq.Item(0) = "pk_null"
    oMemSeq.Item(1) = "pk_void"
    oMemSeq.Item(2) = "pk_short"
    oMemSeq.Item(3) = "pk_long"
    oMemSeq.Item(4) = "pk_ushort"
    oMemSeq.Item(5) = "pk_ulong"
    oMemSeq.Item(6) = "pk_float"
    oMemSeq.Item(7) = "pk_double"
    oMemSeq.Item(8) = "pk_boolean"
    oMemSeq.Item(9) = "pk_char"
    oMemSeq.Item(10) = "pk_octet"
    oMemSeq.Item(11) = "pk_any"
    oMemSeq.Item(12) = "pk_TypeCode"
    oMemSeq.Item(13) = "pk_Principal"
    oMemSeq.Item(14) = "pk_string"
    oMemSeq.Item(15) = "pk_objref"
    oMemSeq.Item(16) = "pk_longlong"
    oMemSeq.Item(17) = "pk_ulonglong"
    oMemSeq.Item(18) = "pk_longdouble"
    oMemSeq.Item(19) = "pk_wchar"
    oMemSeq.Item(20) = "pk_wstring"
    oMemSeq.Item(21) = "pk_value_base"
    Set PrimitiveKind_TypeCode = oOrb.createEnumTc(sTypeId, "PrimitiveKind", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "PrimitiveKind_TypeCode")
End Function

'Enum AttributeMode, Helper
Public Function AttributeMode_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/AttributeMode:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 2
    oMemSeq.Item(0) = "ATTR_NORMAL"
    oMemSeq.Item(1) = "ATTR_READONLY"
    Set AttributeMode_TypeCode = oOrb.createEnumTc(sTypeId, "AttributeMode", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "AttributeMode_TypeCode")
End Function

'Enum OperationMode, Helper
Public Function OperationMode_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/OperationMode:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 2
    oMemSeq.Item(0) = "OP_NORMAL"
    oMemSeq.Item(1) = "OP_ONEWAY"
    Set OperationMode_TypeCode = oOrb.createEnumTc(sTypeId, "OperationMode", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "OperationMode_TypeCode")
End Function

'Enum ParameterMode, Helper
Public Function ParameterMode_TypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    Dim sTypeId As String
    sTypeId = "IDL:omg.org/CORBA/ParameterMode:1.0"
    Dim oOrb As cOrbImpl
    Set oOrb = VBOrb.defaultOrb()
    'Describe enum members
    Dim oMemSeq As c_StringSeq
    Set oMemSeq = New c_StringSeq
    oMemSeq.Length = 3
    oMemSeq.Item(0) = "PARAM_IN"
    oMemSeq.Item(1) = "PARAM_OUT"
    oMemSeq.Item(2) = "PARAM_INOUT"
    Set ParameterMode_TypeCode = oOrb.createEnumTc(sTypeId, "ParameterMode", oMemSeq)
    Exit Function
ErrHandler:
    Call VBOrb.ErrReraise(Err, "ParameterMode_TypeCode")
End Function

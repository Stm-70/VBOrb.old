VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cCBUnionMember"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v121. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/CORBA.idl
'Target File Name: cCBUnionMember.cls

Option Explicit

'struct ::CORBA::UnionMember
Const sTypeId As String = "IDL:omg.org/CORBA/UnionMember:1.0"

'Member(s)
Private name_ As String
Private label_ As cOrbAny
Private p_type_ As cOrbTypeCode
Private type_def_ As cCBIDLType

'Member: name
Public Property Get name() As String
    name = name_
End Property

Public Property Let name(ByVal nameNew As String)
    name_ = nameNew
End Property

'Member: label
Public Property Get label() As cOrbAny
    Set label = label_
End Property

Public Property Set label(ByVal labelNew As cOrbAny)
    Set label_ = labelNew
End Property

'Member: type
Public Property Get p_type() As cOrbTypeCode
    Set p_type = p_type_
End Property

Public Property Set p_type(ByVal typeNew As cOrbTypeCode)
    Set p_type_ = typeNew
End Property

'Member: type_def
Public Property Get type_def() As cCBIDLType
    Set type_def = type_def_
End Property

Public Property Set type_def(ByVal type_defNew As cCBIDLType)
    Set type_def_ = type_defNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    name_ = oIn.readString()
    Set label_ = oIn.readAny()
    Set p_type_ = oIn.readTypeCode()
    Set type_def_ = mCBIDLType.narrow(oIn.readObject())
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "UnionMember.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeString(name_)
    Call oOut.writeAny(label_)
    Call oOut.writeTypeCode(p_type_)
    Call oOut.writeObject(type_def_)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "UnionMember.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    name_ = oAny.getString()
    Call oAny.nextPos
    Set label_ = oAny.getAny()
    Call oAny.nextPos
    Set p_type_ = oAny.getTypecode()
    Call oAny.nextPos
    Set type_def_ = oAny.getReference()
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call oAny.insertString(name_)
    Call oAny.nextPos
    Call oAny.insertAny(label_)
    Call oAny.nextPos
    Call oAny.insertTypecode(p_type_)
    Call oAny.nextPos
    Call oAny.insertReference(type_def_)
    Call oAny.nextPos
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub
